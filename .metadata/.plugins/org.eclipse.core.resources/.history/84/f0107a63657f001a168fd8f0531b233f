package com.mes.api.test;

import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import java.util.logging.Logger;

import static org.testng.Assert.assertEquals;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;

import com.mes.api.common.ApiHelper;
import com.mes.api.common.RestAssuredUtility;

import io.restassured.RestAssured;
import io.restassured.http.Method;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;

public class ValidatePosts {
	
	public static final Logger LOGGER = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);
//	A better approach will be to store it in .properties file rather than hard coding in every test
	String baseURI = "http://qainterview.merchante-solutions.com:3030";
	private Response response = null;
	private JsonPath jasonPath = null;
	HashMap<String,Object> params = new HashMap<String,Object>();
	
	@BeforeTest
	public void setUp() {
		response = RestAssuredUtility.getRequest(baseURI, "/posts");
	}
	
	@Test(priority = 1)
	public void verifyStatusCode() {
		ApiHelper.verifyStatusCode(response, 200);
	}
	
	@Test
	public  void getDetails() {
		jasonPath = RestAssuredUtility.getJasonPath(response);
		ArrayList postsList = jasonPath.get("title");
		for(int i =0; i < postsList.size()-1; i++) {
			LOGGER.info("The titles are " +postsList.get(i));
		}
	}
	
	@Test
	public void updatePostForId(String id) {
		params.putAll(PayloadsGenerator.generatePayloadforPosts());
		Object postId = params.get("id");
		String endPoint = baseURI+"/posts";
		RequestSpecification httpRequest = RestAssured.given();
		Response response = httpRequest.request(Method.PUT,endPoint +"/?id="+postId);
		String respBody = response.getBody().asString();
		jasonPath = RestAssuredUtility.getJasonPath(response);
		
//		Verify if the input parameters got added successfully
		for(Map.Entry<String, Object> entry : params.entrySet()) {
			assertEquals(jasonPath.get(entry.getKey()).toString().replaceAll("[\\[\\]]", ""),entry.getValue().toString(), "Assertion failed for post");
		}
	}
	
	
	
	@AfterTest
	public void teardown() {
		RestAssuredUtility.resetBaseUri(baseURI);
	}
	
}
